<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Project OutFox Wiki</title><link>https://outfox.wiki/</link><description>Recent content on Project OutFox Wiki</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://outfox.wiki/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview of modifiers</title><link>https://outfox.wiki/dev/mods/Mods-0-Overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-0-Overview/</guid><description>Modifiers Modifiers often change or affect some aspect of the gameplay, usually by messing with the game&amp;rsquo;s notefield. Some modifiers can be selected through the options menu before starting a song, but there are also simfiles with scripted modifiers that tend to have a wildly different experience than just a regular simfile. (Generally, they&amp;rsquo;re known as &amp;ldquo;modfiles&amp;rdquo;)
General notes Often, modifiers (or &amp;ldquo;mods&amp;rdquo;) have what&amp;rsquo;s called an &amp;ldquo;approach rate&amp;rdquo;, which is how fast it&amp;rsquo;ll go to reach the specified value.</description></item><item><title>Speed</title><link>https://outfox.wiki/dev/mods/Mods-1-Speed-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-1-Speed-Mods/</guid><description>These modifiers are used to control the scroll speed of notes in gameplay. These modifiers are not column-specific, unlike later mods described elsewhere.
Negative speed modifiers cannot be selected from the Player Options menu, nor can it be set through the lua functions PlayerOptions provides, but it can become negative through the use of mod strings (and some modfiles have taken advantage of that).
XMod Desc: The &amp;ldquo;X&amp;rdquo; in &amp;ldquo;XMod&amp;rdquo; is for multiply, with it often showing as 1x or 2.</description></item><item><title>Perspective</title><link>https://outfox.wiki/dev/mods/Mods-2-Perspective-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-2-Perspective-Mods/</guid><description>Perspective modifiers tilt and skew the notefield itself to allow for a feeling of depth. Scripted modfiles can use these to do effects like rocking the notefield back and forth among other effects (And is definitely noticable with 3D noteskins).
Unlike most modifiers available through PlayerOptions, these functions only return values in terms of tilt and skew and don&amp;rsquo;t return the current/previous approach rate. Perspecitve modifiers aren&amp;rsquo;t column-specific either.
Hallway Desc: The notefield is tilted away from the player, so that notes start far away and come closer.</description></item><item><title>Column movement</title><link>https://outfox.wiki/dev/mods/Mods-3-Column-Movement-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-3-Column-Movement-Mods/</guid><description>Column movement modifiers allow one to move the columns in any direction. Usually, these are used to create &amp;ldquo;column swaps&amp;rdquo;, which alter the visual order of the columns in gameplay.
Flip Desc: Flip alters the column order to make it appear backwards. For Example, if the column order is usually left down up right, the order becomes right up down left.
Negative values have been used to space out the columns, so values from -200% to 100% could be possible.</description></item><item><title>Scroll</title><link>https://outfox.wiki/dev/mods/Mods-4-Scroll-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-4-Scroll-Mods/</guid><description>Scroll modifiers affect the general scroll of the notefield. This is often used to change from upscroll to downscroll among other effects.
Reverse Desc: Reverse flips the scroll of the whole notefield from upscroll to downscroll. There is also a column-specific version that adds onto the value of normal Reverse.
Commonly, 50% or 100% is used on its' own.
Quirks: When going over 100%, the effect goes backwards, with 200% being normal upscroll again.</description></item><item><title>Rotation</title><link>https://outfox.wiki/dev/mods/Mods-5-Rotation-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-5-Rotation-Mods/</guid><description>Rotation modifiers rotate the notes on the x, y or z axis, and can also rotate the receptors in some cases.
Some noteskins may affect how the effect looks due to how rotation and zoom interact in the notefield.
SM5.3 and Open/NotITG act the same way, while earlier versions of SM5 may act differently.
Dizzy Desc: Notes spin as they reach the receptor, with more rotationz added the farther away from the receptor a note is.</description></item><item><title>Zoom</title><link>https://outfox.wiki/dev/mods/Mods-6-Zoom-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-6-Zoom-Mods/</guid><description>Zoom modifiers affect the size of the notefield or notes &amp;amp; receptors. Zoom works a bit differently in SM5 in that it also affects the z axis unlike in ITG/SM3.95, which only affect x &amp;amp; y.
Extra scaling may be required if recreating effects between ITG and SM5.
Mods that work on the note and column-level may make holds look a bit weird due to how hold scaling works.
Mini Desc: Mini scales down the entire notefield, while maintaining the receptor position.</description></item><item><title>Acceleration</title><link>https://outfox.wiki/dev/mods/Mods-7-Acceleration-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-7-Acceleration-Mods/</guid><description>Acceleration modifiers mess with the vertical acceleration of the note. It lets people have notes speed up, slow down, or do a 180 among other things.
Boomerang Desc: Notes start flying out from the top of the screen, do a 180 at around the bottom of the screen, and go back towards the receptors.
The modifier has a simple on/off nature, so any nonzero magnitude will work. (Unless the VariableBoomerang sub modifier is in play)</description></item><item><title>Visibility</title><link>https://outfox.wiki/dev/mods/Mods-8-Visibility-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-8-Visibility-Mods/</guid><description>Visibility Modifiers Visibility modifiers hide various parts of the gameplay screen, such as the background, notes, receptors and other things.
Cover Desc: Cover hides the song background. The range between fully lit and fully hidden scales based on the current value of the BGBrightness preference.
Use negative amounts to bring back the background if BGBrightness is less than 1. A lot of modfiles use large amounts of negative cover to deal with any positive value BGBrightness could have.</description></item><item><title>Path modifiers</title><link>https://outfox.wiki/dev/mods/Mods-9-Path-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-9-Path-Mods/</guid><description>Path modifiers affect the path a note takes to the receptor, often curving it in some way or creating a type of wave in the movement.
Drunk Desc: Drunk makes the notes and receptors move left and right in a constantly shifting sinusoidal wave. There are extra variants for the Y and Z axis, as well as tangent variants.
Common values can be practically any value, due to its' wide use in modfiles.</description></item><item><title>About Project OutFox</title><link>https://outfox.wiki/user-guide/meta/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/meta/about/</guid><description>Project OutFox 5.3 is an effort to modernize and revitalize the open source rhythm gaming engine StepMania. It is led by Team Rizu, a development team led by community veteran Squirrel, as well as many other prominent members of the current community.
What is different? We have been focusing on refactoring the internal codebase to improve performance, adhere to modern coding practices, and enhance its capabilities on modern hardware and other platforms (including single-board embedded systems such as Raspberry Pi).</description></item><item><title>Color modifiers</title><link>https://outfox.wiki/dev/mods/Mods-10-Color+Gradient-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-10-Color+Gradient-Mods/</guid><description>Color modifiers affect the color of notes in some way. A lot of these follow similar behaviors to the Visibility modifiers, alongside with some extra functionalities.
&amp;lt;color&amp;gt; can be 'ColorType_Red', 'ColorType_Blue' or 'ColorType_Green', and is how one chooses the color channel to affect.
These modifiers generally share usable values between 0 to 100%.
StealthColor Desc: Bring a color channel of the notes down to zero (This does not affect the actual glow color).</description></item><item><title>Game types</title><link>https://outfox.wiki/user-guide/config/game-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/config/game-types/</guid><description>Project OutFox supports a variety of game types, which simulate different types of rhythm games (including button layouts and, where applicable, gameplay behaviours specific to the game type). Game types are further divided into styles, which define chart types such as single, double, etc.
As of 5.3.0-alpha-4.9.8, they include:
dance - The default game type. Similar to games such as Dance Dance Revolution and In the Groove, it uses four lanes in the cardinal directions (left, down, up, right).</description></item><item><title>Installation</title><link>https://outfox.wiki/user-guide/setup/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/setup/install/</guid><description>System requirements Project OutFox has builds for Windows, macOS, and Linux. We also have specific builds for ARM-based Linux devices and Apple M1-based computers. It should run on just about any computer from the mid-2000s onward, depending on the operating system and hardware specifications. We have had alphas running on CPUs as old as the Pentium E2180.
The Windows build of Project OutFox requires Windows 7 or later.</description></item><item><title>Behavioral differences from SM 3.95/ITG</title><link>https://outfox.wiki/dev/actors/General-DifferencesfromOlderSM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/General-DifferencesfromOlderSM/</guid><description>OpenITG, NotITG and SM 3.95 are popular engines based on older versions of StepMania that have communities that continue to support by making new content.
SM5.3 contains a similar feature set as the previous revisions of the game, but with some notable differences. This document aims to provide help with porting content to and from the different versions of the game.
&amp;ldquo;Command&amp;rdquo; format vs &amp;ldquo;Function&amp;rdquo; format Converting commands to the newer function format is generally recommended when porting content to SM5.</description></item><item><title>Chart segments</title><link>https://outfox.wiki/dev/effects/EffectFiles-ChartSegments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/effects/EffectFiles-ChartSegments/</guid><description>Gimmick charts often involve a large amount of BPM changes or stops to create various effects like stutters, wave-type scrolling or switching notes with other types of notes (ex: notes become mines).
This is done with &amp;ldquo;segments&amp;rdquo;. One can have many instances of a segment type.
The SSC simfile format has extra &amp;ldquo;segments&amp;rdquo;, which allow for other effects. The following list notes what is available and what it is supposed to do.</description></item><item><title>FAQ</title><link>https://outfox.wiki/user-guide/meta/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/meta/faq/</guid><description>Q: Where should I report Bugs, request features and post game crashes? If you can, do those in our Issue Tracker Repository, by creating an issue it&amp;rsquo;ll give you those exact options that I mentioned in the question.
You can also use this Discord Server:
Use &amp;ldquo;feature-request&amp;rdquo; channel to request features or give ideas. Use &amp;ldquo;bugs-crashlogs&amp;rdquo; channel to report bugs and game crashes.
You can also use our forum</description></item><item><title>Getting started</title><link>https://outfox.wiki/user-guide/setup/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/setup/getting-started/</guid><description>First-time setup To obtain the best experience, there are a few things you should do after installing Project OutFox. Some of these instructions assume usage of the included default theme (Soundwaves).
Selecting a game type When launching Project OutFox for the first time or without save data present, you will be prompted to select which game type you would like to begin with. Project OutFox supports a variety of game types, which simulate different types of rhythm games (including button layouts and, where applicable, gameplay behaviours specific to the game type).</description></item><item><title>ModSplines</title><link>https://outfox.wiki/dev/mods/Mods-11-ModSplines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-11-ModSplines/</guid><description>ModSplines is a system that allows for arbitrary note pathing through modifiers. This system is based off the spline system used in NotITG, which means it is usable alongside the pre-existing SM5 spline system and other modifiers, too.
Points are positioned like they are for Gradient modifiers, meaning in multiples of ARROW_SIZE away from the receptor.
In SM5, this is only accessible through the PlayerOptions functions, while NotITG has functions available in Player and also has modstring versions available (Though, it&amp;rsquo;s recommended to use the lua functions instead.</description></item><item><title>Anatomy of a Lua actor</title><link>https://outfox.wiki/dev/actors/ActorsLua-Anatomy+Structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/ActorsLua-Anatomy+Structure/</guid><description>Every actor in SM5 follows a standart general structure, with ActorFrames being more flexible in how they&amp;rsquo;re constructed.
General layout Def.Actor { Name= &amp;#34;Example Actor&amp;#34;, InitCommand= function(self) self:zoom(100) end, OnCommand= function(self) self:linear(2):x(30) end, } Every actor starts with a Def. prefix, followed by the actor type itself. An actor can have a name and commands. These commands could be anything, as long as it&amp;rsquo;s suffixed with a Command or MessageCommand, depending on the type of commands needed.</description></item><item><title>Chart modifiers</title><link>https://outfox.wiki/dev/mods/Mods-12-Chart-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-12-Chart-Mods/</guid><description>Chart Modifiers Chart modifiers affect the chart itself, meaning what has to be stepped changes. These cannot be called during gameplay, but can be called through attacks &amp;amp; course files. All of these are boolean modifiers. At the moment, some of these aren&amp;rsquo;t properly set up for any game other than dance.
&amp;ldquo;Transform&amp;rdquo; Modifiers Transform modifiers add or remove or alter notes from the chart, affecting how the chart has to be played.</description></item><item><title>Configure controllers</title><link>https://outfox.wiki/user-guide/setup/controllers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/setup/controllers/</guid><description>On Alpha 4.5 and newer, we switched to using an XInput-compliant input system.
Due to these changes, not all controllers (such as gamepads, dance pads, and other rhythm game-specific controllers) are guaranteed to function with 5.3 out of the box (even if they were supported on earlier versions), unless a controller mapping profile has been created for that specific controller.
We would like to thank Josen Tiamat for writing these new instructions for how to configure your controllers for use on 5.</description></item><item><title>Modifier Files</title><link>https://outfox.wiki/dev/effects/EffectFiles-ModifierFiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/effects/EffectFiles-ModifierFiles/</guid><description>These simfiles have modifiers that are scripted to happen at various points of the song. The difficulty can range between &amp;ldquo;trivial to read&amp;rdquo; to &amp;ldquo;may as well memorize the chart&amp;rdquo;.
Often called &amp;ldquo;Modfiles&amp;rdquo; or &amp;ldquo;Modcharts&amp;rdquo;.
These usually use the FGCHANGES or BGCHANGES of a simfile to load the lua files (if any are used).
Disclaimer: Make sure you&amp;rsquo;ve got making a chart down before starting to make modcharts! Good mods can&amp;rsquo;t save a bad chart!</description></item><item><title>Preferences.ini</title><link>https://outfox.wiki/user-guide/config/preferences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/config/preferences/</guid><description>Preferences.ini is a file that contains many of the system preferences. Some of them are accessible within Project OutFox&amp;rsquo;s settings menu, but some of them are only accessible by editing the file. Manual edits to Preferences.ini must be performed when the game is closed, or else they may be automatically overwritten.
It is located in the Save folder.
List of parameters AdditionalCourseFolders Takes a comma-separated list of directories where additional course (.</description></item><item><title>Command List</title><link>https://outfox.wiki/dev/actors/ActorsLua-CommandList/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/ActorsLua-CommandList/</guid><description>OutFox has actors and actors can have commands. Makes sense that there would be a lot of commands pre-defined by the game, so this is a list of what commands the game has, how and when they&amp;rsquo;re used and what parameters they give.
Commands InitCommand
OnCommand
OffCommand
BeginCommand
EndCommand
SetAttackCommand Called on the noteskin actor before drawing an Attack-type TapNote
Parameters:
Modifiers (string, The attack associated with the tap note.</description></item><item><title>Miscelaneous modifiers</title><link>https://outfox.wiki/dev/mods/Mods-13-Miscelaneous-Mods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/mods/Mods-13-Miscelaneous-Mods/</guid><description>Miscelaneous Modifiers These modifiers don&amp;rsquo;t really fit into any of the above categories, so they&amp;rsquo;re here instead.
&amp;ldquo;clearall&amp;rdquo; Desc: Tells PlayerOptions to do a reset. Often used in modfiles to mimic crs-style resetting. Only available in modstring form right now.
Quirks: N/A
Modstring format: clearall
HoldGrainMult Desc: Adds a multiplier to the &amp;lsquo;step size&amp;rsquo; of holds, allowing one to control how &amp;lsquo;granular&amp;rsquo; a hold is.</description></item><item><title>Tweening</title><link>https://outfox.wiki/dev/actors/ActorsLua-Tweening/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/ActorsLua-Tweening/</guid><description>Actors have the ability to transition from point A to point B using Tweening.
It allows for queueing up movements &amp;amp; transitions on position, size, color and other attributes as well as commands and messages.
Queueing-style tweens These help with queueing actions after a certain amount of time.
Sleep The actor waits for a given amount of seconds before performing the next command.
hibernate Like sleep, but the actor is also hidden for the duration of the hibernate.</description></item><item><title>Converting INI files to Lua</title><link>https://outfox.wiki/dev/actors/Converting-ini-to-Lua/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/Converting-ini-to-Lua/</guid><description>Converting BGAnimation INI files into lua files. StepMania 3.9 &amp;amp; ITG are capable of using BGAnimation.ini files to define actors in place of xml files.
In StepMania 5, these have to be converted into .lua files instead.
General Layout of a BGAnimation.ini file. [BGAnimation] [Layer2] File=path/to/a/different_file.png InitCommand=zoomx,3;zoomy,4;diffuse,1,0,0,0 OnCommand=diffusealpha,0;linear,3;diffusealpha,1 CommandRepeatSeconds=20 [Layer3] File=Common Normal Text=Help Me InitCommand=diffusealpha,0.5 OnCommand=spin;effectmagnitude,0,0,-100 [Layer1] File=path/to/a/file InitCommand=diffusealpha,0.5 OnCommand=spin;effectmagnitude,0,0,100 Here, layers are defined with the section name of Layer, followed by numbers or letters.</description></item><item><title>Converting XML files to Lua</title><link>https://outfox.wiki/dev/actors/Converting-xml-to-Lua/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/actors/Converting-xml-to-Lua/</guid><description>Converting xml files into lua files. StepMania 3.95 &amp;amp; ITG use xml files for both themeing and effect scripting. It also allows embedding lua functions to perform more complex effects &amp;amp; scripting.
In StepMania 5, these have to be converted into .lua files instead.
The &amp;lsquo;easy way&amp;rsquo; of converting There are two semi-automatic ways to convert xml files into lua.
StepMania 5&amp;rsquo;s built-in XML to LUA converter Converts positions to be based off of SCREEN_CENTER_X (which can result in some lost position information.</description></item><item><title>Content folders</title><link>https://outfox.wiki/user-guide/config/folders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/user-guide/config/folders/</guid><description>Project OutFox uses various folders to store content, such as songs, save data, themes, noteskins, etc. Content is stored in one of the three following locations;
Global folders are located within the Project OutFox installation directory. If you are on a multi-user operating system, content in these folders will be accessible to all users. When Portable Mode is enabled, your save data (including profiles and preference files) will be placed in the installation directory.</description></item><item><title>Translation</title><link>https://outfox.wiki/dev/translation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://outfox.wiki/dev/translation/</guid><description>Are you translating a theme to another language? Reading this might help you.
Where are language files stored Inside every theme there&amp;rsquo;ll be a Languages folder. Inside that folder is where language files are stored. Example:
Languages/ en.ini ja.ini Here we can see 2 language files: en for English and ja for Japanese. It&amp;rsquo;s a standard to name language files in that format (language-COUNTRY.ini). For example: In this case, there&amp;rsquo;s a Portuguese translation, but since there&amp;rsquo;s also Portuguese from Portugal, the file was named pt-BR (BR = Brazil).</description></item></channel></rss>